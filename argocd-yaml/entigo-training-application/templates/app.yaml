apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: {{ .Values.api.image }}
        imagePullPolicy: IfNotPresent
        name: nodejs
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 3
          periodSeconds: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 2
          periodSeconds: 1
        env:
        - name: REDIS_HOST
          value: "{{ .Values.api.redisHost }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 20
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: web
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
        svc: web
    spec:
      containers:
      - image: {{ .Values.web.image }}
        imagePullPolicy: IfNotPresent
        name: nodejs
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 5
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: web
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3001
  selector:
    app: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: "{{ .Values.externaldomain }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port: 
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80

